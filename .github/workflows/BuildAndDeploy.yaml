name: Build and Deploy Java App
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build JAR Artifact and Build Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set Up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 11
      
    - name: Maven Build JAR Artifact 
      run: mvn -f app/pom.xml -B clean package

    - name: Login Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASS }}

    - name: Build and Push
      uses: docker/build-push-action@v5
      with:
        context: app
        push: true
        tags: ewertonrdr/app:${{ github.sha }}, ewertonrdr/app:latest

  aws-credentials:
    name: Authenticate AWS using Credentials
    runs-on: ubuntu-latest
    needs: 
      - build

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

  terraform:
    name: Terraform Execution Steps
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: /infra
    needs: 
      - build
      - aws-credentials

    steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0
        
    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate -no-color

    - name: Terraform Plan
      run: terraform plan -no-color

      continue-on-error: true

    - name: Check Destroy flag 
      id: check_destroy
      run: |
        content=$(jq -r .destroy cleaning.json)
        if [[ $content == "true" ]]; then
          echo "::set-output name=destroy::true"
        else
          echo "::set-output name=destroy::false"
        fi

    - name: Terraform Apply
      id: apply
      if: github.ref == 'refs/heads/main' && steps.check_destroy.outputs.destroy == 'false'
      run: terraform apply -auto-approve -no-color

    - name: Terraform Destroy
      id: destroy
      if: steps.check_destroy.outputs.destroy == 'true'
      run: terraform destroy -auto-approve

  kubernetes:
    name: EKS Auth And Helm Deploy
    runs-on: ubuntu-latest
    needs:
      - build
      - aws-credentials

    steps:
    - name: Set Up Kube Config Data
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'
      env:
       KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

    - name: Get Docker Image Version
      id: docker_image_version
      run: echo "::set-output name=docker_version::$(echo ${{ github.sha }} | cut -c1-7)"

    - name: Create Helm Release
      run: helm upgrade --install app --set image.tag=${{ steps.docker_image_version.outputs.docker_version }} ewertonrdr/app --version 1.0.0 ./helm
